set(VCPKG_TARGET_ARCHITECTURE x64)
set(VCPKG_CRT_LINKAGE dynamic)
set(VCPKG_LIBRARY_LINKAGE dynamic)

set(VCPKG_CMAKE_SYSTEM_NAME Linux)

message(STATUS "TRIPLET CMAKE_EXE_LINKER_FLAGS=${CMAKE_EXE_LINKER_FLAGS}")
message(STATUS "TRIPLET CMAKE_MODULE_LINKER_FLAGS=${CMAKE_MODULE_LINKER_FLAGS}")
message(STATUS "TRIPLET CMAKE_SHARED_LINKER_FLAGS=${CMAKE_SHARED_LINKER_FLAGS}")
message(STATUS "TRIPLET CMAKE_STATIC_LINKER_FLAGS=${CMAKE_STATIC_LINKER_FLAGS}")
message(STATUS "TRIPLET CMAKE_EXTRA_LINKER_FLAGS=${CMAKE_EXTRA_LINKER_FLAGS}")
message(STATUS "TRIPLET CMAKE_MODULE_LINKER_FLAGS_INIT=${CMAKE_MODULE_LINKER_FLAGS_INIT}")
message(STATUS "TRIPLET CMAKE_STATIC_LINKER_FLAGS_INIT=${CMAKE_STATIC_LINKER_FLAGS_INIT}")
message(STATUS "TRIPLET CMAKE_SHARED_LINKER_FLAGS_INIT=${CMAKE_SHARED_LINKER_FLAGS_INIT}")
message(STATUS "TRIPLET LDFLAGS=${LDFLAGS}")
message(STATUS "TRIPLET ENV-LDFLAGS=$ENV{LDFLAGS}")
message(STATUS "TRIPLET PORT=${PORT}")
message(STATUS "TRIPLET ENV-VCPKG_BUILD_TYPE=$ENV{VCPKG_BUILD_TYPE}")
set(VCPKG_BUILD_TYPE $ENV{VCPKG_BUILD_TYPE})

set(CMAKE_SHARED_LINKER_FLAGS_INIT "-Wl,--no-undefined")
set(CMAKE_SHARED_LINKER_FLAGS "-Wl,--no-undefined")

set(VCPKG_LINKER_FLAGS "-Wl,--no-undefined")
if(PORT MATCHES "glib")
	set(VCPKG_LINKER_FLAGS "")
endif()
#set( ENV{LDFLAGS} "${VCPKG_LINKER_FLAGS}" )
message(STATUS "TRIPLET VCPKG_LINKER_FLAGS=${VCPKG_LINKER_FLAGS}")
